### 440. Using Jinja to Produce Dynamic HTML

## index.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>My Website</title>
    <link rel="stylesheet" href="static/styles.css">
</head>
<body>
    <h1>Hello World</h1>
    <h2>{{5 * 6}}</h2>
    <h3>Random Number: {{num}}</h3>
</body>
<footer>
    <p>Copyright {{year}}. All rights reserved.</p>
</footer>
</html>


## server.py
from flask import Flask, render_template
import random
import datetime


app = Flask(__name__)


@app.route("/")
def home():
    random_number = random.randint(1, 10)
    current_year = datetime.datetime.now().year
    return render_template("index.html", num=random_number, year=current_year)


if __name__ == "__main__":
    app.run(debug=True)




### 441. Challenge: Combining Jinja Templating with APIs
## guess.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Guess</title>
</head>
<body>
    <h1>Hey {{person_name.title()}}</h1>
<h2> I think you are {{person_gender}}</h2>
<h3> And maybe {{person_age}} years old.</h3>
</body>
</html>


## server.py
from flask import Flask, render_template
import random
import datetime
import requests


app = Flask(__name__)


@app.route("/")
def home():
    random_number = random.randint(1, 10)
    current_year = datetime.datetime.now().year
    return render_template("index.html", num=random_number, year=current_year)


@app.route("/guess/<name>")
def guess(name):
    gender_url = f"https://api.genderize.io?name={name}"
    gender_response = requests.get(gender_url)
    gender_data = gender_response.json()
    gender = gender_data["gender"]
    age_url = f"https://api.agify.io?name={name}"
    age_response = requests.get(age_url)
    age_data = age_response.json()
    person_age = age_data["age"]
    return render_template("guess.html", person_name=name, person_gender=gender, person_age=person_age)


if __name__ == "__main__":
    app.run(debug=True)




### 442. Multiline Statements with Jinja
## blog.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Blog</title>
</head>
<body>
    {% for blog_post in posts: %}
        {% if blog_post["id"] == 1: %}
            <h1>{{blog_post["title"]}}</h1>
            <h2>{{blog_post["subtitle"]}}</h2>
        {% endif %}
    {% endfor %}
</body>
</html>


## server.py
from flask import Flask, render_template
import random
import datetime
import requests


app = Flask(__name__)


@app.route("/")
def home():
    random_number = random.randint(1, 10)
    current_year = datetime.datetime.now().year
    return render_template("index.html", num=random_number, year=current_year)


@app.route("/blog")
def blog():
    blog_url = "https://api.npoint.io/c790b4d5cab58020d391"
    response = requests.get(blog_url)
    all_posts = response.json()
    return render_template("blog.html", posts=all_posts)


if __name__ == "__main__":
    app.run(debug=True)
